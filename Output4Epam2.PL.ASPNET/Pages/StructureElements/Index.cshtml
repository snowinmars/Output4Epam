@using Output4Epam.Providers
@using Output4Epam.Entities
@using System.Linq

@{
	Layout = @"/Pages/Layouts/MainLayout.cshtml";
}

@{
	bool isAdmin = LogicProvider.RegUserLogic.IsUserInRole(User.Identity.Name, RoleScroll.Admin.ToString());
	bool isUser = LogicProvider.RegUserLogic.IsUserInRole(User.Identity.Name, RoleScroll.User.ToString());

	string order = Request["orderby"];
	string filter = Request["filterby"];
	IEnumerable<Lot> collection = default(IEnumerable<Lot>);

	if ((filter != String.Empty) || (filter != null))
	{
		collection = from item in LogicProvider.LotLogic.GetAll()
			     where item.Types.HasFlag((LotTypes)Enum.Parse(typeof(LotTypes), filter))
			     select item;
	}

	if (((order == String.Empty) || (order == null)) &&
		((filter == String.Empty) || (filter == null)))
	{
		order = "orderByDate";
	}

	switch (order)
	{
		case "orderByDate":
			collection = from item in LogicProvider.LotLogic.GetAll() // dunno how to sort in another way
				     orderby item.PostDate                             // yea, I know about method Filter(), but...
				     select item;
			break;
		case "orderByName":
			collection = from item in LogicProvider.LotLogic.GetAll()
				     orderby item.Title
				     select item;
			break;
		case "orderByOwner":
			collection = from item in LogicProvider.LotLogic.GetAll()
				     orderby item.Owner
				     select item;
			break;
		default:
			break;
	}
}

<ul class="userlist col-sm-offset-1 col-xs-12 col-sm-11">
	@foreach (var item in collection)
	{
		<li class="userlistitem col-xs-12">
			<p class="p4img col-xs-6 col-sm-4 col-md-2">
				<a href="~/Pages/StructureElements/ShowMore.cshtml?id=@item.Id"><img class="img img-responsive" src="/Pages/AJAX/GetImage.cshtml?id=@item.Id" alt="image" /></a>
			</p>
			<div class="col-xs-6 col-sm-8 col-md-10">
				<p class="title col-xs-8 link">@item.Title</p>
				<div class=" col-xs-4 hidden-xs">
					<button type="button" class="btn btn-default btn-xs dropdown-toggle cost link" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<span class="cost" data-cost="@(item.Cost)">@item.Cost руб.</span>
						<span class="caret"></span>
					</button>
					<ul class="costchoise dropdown-menu">
						<li class="costchoiseitem" data-type="dollar"><a href="#">Баксы</a></li>
						<li class="costchoiseitem" data-type="euro"><a href="#">Евро</a></li>
						<li class="costchoiseitem" data-type="ruble"><a href="#">Рубли</a></li>
					</ul>
				</div>
				<p class="owner col-xs-offset-1 hidden-xs">posted by @item.Owner from г. @item.Sity</p>
			</div>
			<p class="info col-xs-6 col-sm-6 col-md-10">@item.Info</p>
			<div class="col-xs-2 visible-md visible-lg ">
				<p class="postDate toolatip" data-tooltip="format in dd.mm.yyyy">@item.PostDate</p>
			</div>
			<div class="col-xs-4 visible-md visible-lg">
				@if (item.BoughtBy == String.Empty)
				{
					<p class="btn mybtn btn-default btn-xs buy" data-id="@item.Id">Buy</p>
				}
				else
				{
					<p class="btn mybtn btn-default btn-xs toolatip" disabled="disabled" data-tooltip="bought by @item.BoughtBy" data-id="@item.Id">Buy</p>
				}
				<p class="btn mybtn btn-danger btn-xs delete" data-id="@item.Id">Delete</p>
			</div>
			<div class=" col-xs-4 hidden-md hidden-lg">
				<p class="btn mybtn btn-default more" data-id="@item.Id"><a href="~/Pages/StructureElements/ShowMore.cshtml?id=@item.Id">More</a></p>
			</div>
			<div class="visible-md visible-lg ">
				<p class="categories">
					@foreach (var type in @item.Types.ToString().Split(','))
				{
						<span>@String.Join("", "#", type)</span>
				}
				</p>
			</div>
		</li>
	}
</ul>
<div id="toolatip"></div>