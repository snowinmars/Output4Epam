@using Output4Epam.Providers
@using Output4Epam.Entities

@{
	Layout = "~/Pages/Index.cshtml";

	bool isAdmin = LogicProvider.RegUserLogic.IsUserInRole(User.Identity.Name, RoleScrolls.Admin.ToString());
	bool isUser = LogicProvider.RegUserLogic.IsUserInRole(User.Identity.Name, RoleScrolls.User.ToString());

	string order = Request["orderby"];
	string filter = Request["filterby"];
	IEnumerable<Lot> collection = default(IEnumerable<Lot>);

	if ((filter != String.Empty) || (filter != null))
	{
		collection = from item in LogicProvider.LotLogic.GetAll()
			     where item.Types.HasFlag((LotTypes)Enum.Parse(typeof(LotTypes), filter))
			     select item;
	}

	if (((order == String.Empty) || (order == null)) &&
		((filter == String.Empty) || (filter == null)))
	{
		order = "orderByDate";
	}

	switch (order)
	{
		case "orderByDate":
			collection = from item in LogicProvider.LotLogic.GetAll() // dunno how to sort in another way
				     orderby item.Postdate                             // yea, I know about method Filter(), but...
				     select item;
			break;
		case "orderByName":
			collection = from item in LogicProvider.LotLogic.GetAll()
				     orderby item.Title
				     select item;
			break;
		case "orderByOwner":
			collection = from item in LogicProvider.LotLogic.GetAll()
				     orderby item.Owner
				     select item;
			break;
		default:
			break;
	}
}

@RenderPage("/Pages/StructureElements/TopButtons.cshtml")

<section class="section">
	@if (!collection.Any())
	{
		@RenderPage("/Pages/StructureElements/NothingFound.cshtml");
	}
	<ul class="userlist">
		@foreach (var item in collection)
		{
			<li class="userlistitem">
				<p class="p"><img class="img" src="/Pages/AJAX/GetImage.cshtml?id=@item.Id" alt="image" /></p>
				<p class="title">@item.Title.ToString()</p>
				<p class="info">@item.Info</p>
				<p class="city">г. @item.City</p>
				<p class="cost" tabindex="2" data-cost="@(item.Cost)">@(item.Cost) руб.</p>  <!-- data-cost always in rubles -->
				<ul class="costchoise">
					<li class="costchoiseitem" data-type="dollar">Баксы</li>
					<li class="costchoiseitem" data-type="euro">Евро</li>
					<li class="costchoiseitem" data-type="ruble">Рубли</li>
				</ul>
				<p class="postDate tooltip" data-tooltip="format in dd.mm.yyyy">@item.Postdate.ToString("dd.MM.yyyy")</p>
				<p class="owner">posted by @(item.Owner)</p>
				@if (isUser)
				{
					if (item.BoughtBy == "")
					{
						<p class="button buy" data-id="@item.Id">Купить</p>
					}
					else
					{
						<p class="button bought tooltip" data-tooltip="bought by @item.BoughtBy" data-id="@item.Id">Купить</p>

					}
				}
				@if (isAdmin)
				{
					<p class="button delete" data-id="@item.Id">Удалить</p>
				}
				<p class="categories">
					@foreach (var type in @item.Types.ToString().Split(','))
				{
						<span>@String.Join("", "#", type)</span>
				}
				</p>
			</li>
		}
	</ul>
	<div id="tooltip"></div>
</section>