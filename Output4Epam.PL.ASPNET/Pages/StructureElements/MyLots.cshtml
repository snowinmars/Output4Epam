@using Output4Epam.Providers
@using System.Linq
@using Output4Epam.Entities
@using System.Collections.Generic
@using System

@{
	Layout = "~/Pages/Index.cshtml";
}

@{
	bool isUser = LogicProvider.RegUserLogic.IsUserInRole(User.Identity.Name, "User");


	string order = Request["orderby"];
	string filter = Request["filterby"];
	IEnumerable<Lot> myLotList = default(IEnumerable<Lot>);

	if ((filter != String.Empty) || (filter != null))
	{
		myLotList = from item in LogicProvider.LotLogic.GetAll()
			    where item.Types.HasFlag((LotTypes)Enum.Parse(typeof(LotTypes), filter))
			    where item.Owner == User.Identity.Name
			    select item;
	}

	if (((order == String.Empty) || (order == null)) &&
		((filter == String.Empty) || (filter == null)))
	{
		order = "orderByDate";
	}

	switch (order)
	{
		case "orderByDate":
			myLotList = from item in LogicProvider.LotLogic.GetAll() // dunno how to sort in another way
				    where item.Owner == User.Identity.Name
				    orderby item.PostDate                             // yea, I know about method Filter(), but...
				    select item;
			break;
		case "orderByName":
			myLotList = from item in LogicProvider.LotLogic.GetAll()
				    where item.Owner == User.Identity.Name
				    orderby item.Title
				    select item;
			break;
		case "orderByOwner":
			myLotList = from item in LogicProvider.LotLogic.GetAll()
				    where item.Owner == User.Identity.Name
				    orderby item.Owner
				    select item;
			break;
		default:
			break;
	}
}
S
@if (isUser)
{
	@RenderPage("/Pages/StructureElements/TopButtons.cshtml")

	<section class="section">
		@if (!myLotList.Any())
		{
			@RenderPage("/Pages/StructureElements/NothingFound.cshtml");
		}
		<ul class="ul">
			@foreach (var item in myLotList)
			{
				<li class="li">
					<p class="p"><img class="img" src="/Pages/AJAX/GetImage.cshtml?id=@item.Id" alt="image" /></p>
					<p class="title">@item.Title.ToString()</p>
					<p class="info">@item.Info</p>
					<p class="city">г. @item.Sity</p>
					<p class="cost">@(item.Cost) руб.</p>
					<p class="postDate tooltip" data-tooltip="format in dd.mm.yyyy">@item.PostDate.ToString("dd.MM.yyyy")</p>
					<p class="owner">posted by @(item.Owner)</p>
					<p class="button delete" id="@item.Id">Удалить</p>
					@foreach (var type in @item.Types.ToString().Split(','))
					{
						<p class="categories">
							<span>@String.Join("", "#", type)</span>
						</p>
					}
				</li>
			}
		</ul>
		<div id="tooltip"></div>
	</section>
}
else
{
	Response.Redirect("/Pages/StructureElements/Content");
}